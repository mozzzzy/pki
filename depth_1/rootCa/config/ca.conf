#
# default section
#
[default]
name          = root-ca
domain_suffix = dev.local
aia_url       = http://$name.$domain_suffix/$name.crt
crl_url       = http://$name.$domain_suffix/$name.crl
ocsp_url      = http://ocsp-responder.$name.$domain_suffix:9080
home          = .
db_dir        = $home/db
private_dir   = $home/private

#
# section for ca command
#
[ca]
# The default ca section.
# This value can be overriden by -name <section> option.
default_ca = ca_default

#
# default settings for ca command
#
[ca_default]
# The same as -extensions.
# The section of the configuration file containing certificate extensions to be added
# when a certificate is issued.
x509_extensions = root_ca_ext

# determines how extensions in csr should be handled.
# none (or this option is not present) : extensions are ignored and not copied to the certificate.
# copy                                 : any extensions present in the csr that are not already
#                                        present are copied to the certificate.
# copyall                              : all extensions in the csr are copied to the certificate.
copy_extensions = none

# same as the -keyfile option. The file containing the CA private key. Mandatory.
private_key = $private_dir/$name.key

# the text database file to use. Mandatory. This file must be present though initially it
# will be empty.
database = $db_dir/index

# a text file containing the next serial number to use in hex. Mandatory.  This file must be
# present and contain a valid serial number.
serial = $db_dir/serial

# a text file containing the next CRL number to use in hex. The crl number will be inserted
# in the CRLs only if this file exists. If this file is present, it must contain a valid CRL
# number.
crlnumber = $db_dir/crlnumber

# the same as -cert. It gives the file containing the CA certificate. Mandatory.
certificate = $home/$name.crt

# the same as the -outdir command line option. It specifies the directory where new
# certificates will be placed. Mandatory.
new_certs_dir = $home/certs

# private random number file.
RANDFILE = $private_dir/.rand

# the same as the -days option. The number of days to certify a certificate for.
default_days = 3650

# the same as the -crldays options.
# This will only be used if neither command line option is present.
default_crl_days= 30

# the same as the -md option. Thre message digest to use. Mandatory.
default_md = sha256

# the same as -policy. Mandatory.
# Specified section consists of a set of variables corresponding to certificate DN fields.
# If value is "match" then the field value must match the same field in the CA certificate.
# If value is "supplied" then it must be present.
# If the value is "optional" then it may be present.
policy = policy_match

# This section consists of a set of variables corresponding to certificate DN fields.
# This section is used in ca_default section.
# match    : should maatch with ca.
# supplied : required.
# optional : not required.
[policy_match]
countryName             = match
stateOrProvinceName     = match
organizationName        = supplied
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

#
# Section containing a list of extensions to add.
# This section is used in ca_default section.
#
[root_ca_ext]
# authorityInfoAccess extension ...
#   (https://tools.ietf.org/html/rfc5280#section-4.2.2.1)
#   The authority information access extension indicates how to access
#   information and services for the issuer of the certificate in which
#   the extension appears.
authorityInfoAccess = @issuer_info

# basicConstraints extension ...
#    (https://tools.ietf.org/html/rfc5280#section-4.2.1.9)
#    The basic constraints extension identifies whether the subject of the
#    certificate is a CA and the maximum depth of valid certification
#    paths that include this certificate.
#
# Following value specifies that the requested certificate is for ca.
basicConstraints = critical,CA:true

# crlDistributionPoints extension ...
#   (https://tools.ietf.org/html/rfc5280#section-4.2.1.13)
#   The CRL distribution points extension identifies how CRL information is obtained.
crlDistributionPoints = @crl_info

# keyUsage extension ...
#   (https://tools.ietf.org/html/rfc5280#section-4.2.1.3)
#   The key usage extension defines the purpose (e.g., encipherment,
#   signature, certificate signing) of the key contained in the
#   certificate.
keyUsage = critical,keyCertSign,cRLSign

# subjectKeyIdentifier extensions ...
#   (https://tools.ietf.org/html/rfc5280#section-4.2.1.2)
#   The subject key identifier extension provides a means of identifying
#   certificates that contain a particular public key.
#   this extension MUST appear in all conforming CA certificates.
subjectKeyIdentifier = hash

#
# Section containings a list of extensions to add.
# This section is used from Makefile when the certificate for ocsp responder is created.
#
[ocsp_ext]
# authorityKeyIdentifier extension ...
#   (https://tools.ietf.org/html/rfc5280#section-4.2.1.1)
#   The authority key identifier extension provides a means of
#   identifying the public key corresponding to the private key used to
#   sign a certificate
authorityKeyIdentifier = keyid:always
basicConstraints       = critical,CA:false
keyUsage               = critical,digitalSignature
extendedKeyUsage       = OCSPSigning
subjectKeyIdentifier   = hash

#
# Section containing a list of extensions to add.
# This section is used from Makefile when the certificate for intermediate ca is created.
#
[int_ca_ext]
authorityInfoAccess    = @issuer_info
authorityKeyIdentifier = keyid:always
basicConstraints       = critical,CA:true,pathlen:0
crlDistributionPoints  = @crl_info
extendedKeyUsage       = clientAuth,serverAuth
keyUsage               = critical,keyCertSign,cRLSign
# nameConstraints extension ...
#   (https://tools.ietf.org/html/rfc5280#section-4.2.1.10)
#   The name constraints extension, which MUST be used only in a CA
#   certificate, indicates a name space within which all subject names in
#   subsequent certificates in a certification path MUST be located.
#   Restrictions apply to the subject distinguished name and apply to
#   subject alternative names.  Restrictions apply only when the
#   specified name form is present.  If no name of the type is in the
#   certificate, the certificate is acceptable.
nameConstraints        = @name_constraints
subjectKeyIdentifier   = hash

#
# Section containing crl info.
# This section is used in root_ca_ext and server_ext section.
#
[crl_info]
URI.0 = $crl_url

#
# Section containing issuer info.
# This section is used in root_ca_ext and server_ext section.
#
[issuer_info]
caIssuers;URI.0 = $aia_url
OCSP;URI.0      = $ocsp_url

#
# Section containing name constraints info.
#
[name_constraints]
permitted;DNS.0 = dev.local
excluded;IP.0   = 0.0.0.0/0.0.0.0
excluded;IP.1   = 0:0:0:0:0:0:0:0/0:0:0:0:0:0:0:0
